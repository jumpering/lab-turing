@startuml EducationPlatformDomain

EducationPlatform *--> "+" User
EducationPlatform *--> Topic
EducationPlatform *--> Itinerary : predefined
EducationPlatform o--> "*" Itinerary : custom
EducationPlatform *--> Evaluator
'EducationPlatform *--> ConceptGraph

abstract User{
}

User <|-- Teacher
User <|-- Student
'User *-->"+" Application

class Teacher{
}

class Student{
}
Student *-[#red]-> "*" Application
'Student --> Itinerary

class Evaluator{
}
Evaluator --> Application

class Itinerary {
}
Itinerary o--> "+" Topic

class Definition {
    '- correct : boolean
}

class Justification {
    '- correct : boolean
}

class Domain {
    - version : int
    - requirements : List<String>
}

abstract Exercise {
    - statement : String
}
Exercise <|-down- Domain
Exercise <|-down- Question
Exercise *-->"+" Application
Exercise o-->"*" Application

abstract Question{
}
Question <|-- MultipleChoice
Question <|-- Cloze
Question <|-- Open

class Cloze{
    blankCount: int
}
  
class MultipleChoice{
}

class Application{
    '- correct : boolean
    - evaluated : boolean
    - solution : String
}

abstract Validatable{
    - correct : boolean
}
Validatable <|-- Application
Validatable <|-- Definition
Validatable *--> "*" Justification:[!validatable.correct]

abstract Topic{
}
Topic *-[#red]-> "*" Document
Topic <|-- CompositeTopic
Topic <|-- SimpleTopic

class SimpleTopic{
}
SimpleTopic o--> "+" Concept

class CompositeTopic{
}
CompositeTopic o--> "+" Topic

abstract Document{}
Document <|-- Audio
Document <|-- Video
Document <|-- Image
Document <|-- Text

'class ConceptGraph{
'}
'ConceptGraph o--> "+"Concept

class Concept{
}
Concept *-down-> "+" Definition : correct
Concept *-down-> "*" Definition : incorrect
Concept *-down-> "*" Relation : origin
Concept *-down[#red]-> "*" Document
Concept o-down[#red]-> "*" Exercise

class Relation {
}
Relation --> Concept : target
Relation *-down-> RelationType

enum RelationType {
    Use
    Association
    Composition
    Inheritance
    Aggregation
} 
@enduml