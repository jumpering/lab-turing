@startuml EducationPlatformDomain

class EducationPlatform {
}
EducationPlatform *--> "+" Teacher
EducationPlatform *--> "+" Student
EducationPlatform *--> Topic
EducationPlatform *--> Itinerary : predefined
EducationPlatform o--> "*" Itinerary : custom
EducationPlatform o--> Evaluator

class Domain {
    - name
    - category [game,manager,misc]
}
Domain o-->"*" Application
'Application o--> "*" Solution

class Application {
    - version
    - requirements
}


package "Knowledge-Base" {
    class Concept {
    }
    Concept o--> "+" Definition : correct
    Concept o--> "*" Definition : incorrect
    Concept o--> "*" Relation : origin

    class Definition {
        - correct : boolean
    }
    Definition o-->"*" Justification :correct = false

    class Justification {
        - correct : boolean
        }

    class Relation {
    }
    Relation *--> Concept : target
    Relation *--> RelationType

    enum RelationType {
        Use
        Association
        Composition
        Inheritance
        Aggregation
    }
}
EducationPlatform o--> "*" Domain
Application -->"+" Concept

class Itinerary {
}
Itinerary o--> "+" Topic

abstract Topic{
}
Topic <|.. CompositeTopic
Topic <|.. SimpleTopic
Topic o--> "+" Attachment

class SimpleTopic{
}
SimpleTopic --> "+" Concept

class CompositeTopic{
}
CompositeTopic o--> "+" Topic

class Attachment {
}
Attachment <|-- Podcast
Attachment <|-- Video
Attachment <|-- Text
Podcast o--> Text
Video o--> Text

class Text {
    - images
}

class Evaluator {
}
Evaluator --> Question

class Question {
}
Question -->"+" Concept
Question -->"*" Answer
'Question o--> "*" Solution
Question *--> Statement
Question *--> QuestionType
Statement *--> StatementType

enum QuestionType {
    Open
    MultipleChoice
    ApplicationCodeCompare
}
enum StatementType {
    ClozeTest
    Definition
    Relation
    Justify
}

'class Solution{
'    - correct : boolean
'}
'Solution o--> "?" Justification : correct = false

class Answer {
    - correct : boolean
    - evaluated : boolean
    - author: student
    - content
}

@enduml