@startuml EducationPlatformDomain

EducationPlatform *--> "+" User
EducationPlatform *--> Topic
EducationPlatform *--> Itinerary : predefined
EducationPlatform o--> "*" Itinerary : custom
EducationPlatform *--> Chat

abstract User{
}

User <|-- Teacher
User <|-- Student
User *-->"+" Solution
User ..> Chat
User ..> Itinerary

class Teacher{
}

class Student{
}

class Chat{
}
Chat ..> "+" Topic

class Itinerary {
    - custom : boolean
    - topics : List<Topic>
}
Itinerary o--> "+" Topic

class Definition {
    - correct : boolean
}
Definition *--> "*" Justification:[!definition.correct]

class Justification {
    - correct : boolean
}

class Domain {
    '- statement : StatementType
    - version : int
    - requirements : List<String>
}

abstract Exercise {
    - Solutions : List<Solution>
}
Exercise <|-- Domain
Exercise <|-- Question
Exercise *-->"+" Solution
Exercise o-->"*" Solution
Exercise ..> Solution

abstract Question{
    - statement : Statement
    - solutionCount : int
}
Question *-->Statement
Question <|-- MultipleChoice
Question <|-- Cloze
Question <|-- Open

class Cloze{
    blankCount: int
}
  
class MultipleChoice{
}

class Solution{
    - correct : boolean
    - evaluated : boolean
}
Solution *--> "*" Justification:[!Solution.correct]
                   
class Statement{
    - content : String
}
Statement <|-- Solution

abstract Topic{
    - documents : List<Document>
}
Topic *--> "*" Document
Topic <|-- CompositeTopic
Topic <|-- SimpleTopic

class SimpleTopic{
    - concepts : List<Concept>
}
SimpleTopic o--> "+" Concept

class CompositeTopic{
    - topics : List<Topic> 
}
CompositeTopic o--> "+" Topic

class Document{}
Document *-->"*" Audio
Document *-->"*" Video
Document *-->"*" Image
Document *-->"*" Text

class Concept{
    - exercises : List<Exercise>
    - relations : List<Relation>
}
Concept *-down-> "+" Definition : correct
Concept *-down-> "*" Definition : incorrect
Concept *-down-> "*" Relation
Concept o-down-> "*" Document
Concept o-down-> "*" Exercise

class Relation {
    - type : RelationType
    - connection : Dictionary<Concept,Concept>
}
Relation --> Concept : target
Relation *-down-> RelationType
Relation --> Concept : origin

enum RelationType {
    Use
    Association
    Composition
    Inheritance
    Aggregation
} 
@enduml