@startuml EducationPlatformDomain

EducationPlatform *-[#red]-> "+" User
EducationPlatform *-[#red]-> ContentBattery.Topic
EducationPlatform *-[#red]-> ContentBattery.Itinerary : predefined
EducationPlatform o-[#red]-> "*" ContentBattery.Itinerary : custom
EducationPlatform *-[#red]-> Evaluator
EducationPlatform *-[#red]-> "*" ExerciseBattery.Exercise
EducationPlatform *-[#red]-> "*" ExerciseBattery.Domain
EducationPlatform *-[#red]-> "*" ExerciseBattery.Application
EducationPlatform *-[#red]-> KnowlegeBattery.ConceptGraph

abstract User{
}

User <|-- Teacher
User <|-- Student

class Teacher{
}

class Student{
}
Student o--> "*" ExerciseBattery.Application

class Evaluator{
}
Evaluator --> ExerciseBattery.QuestionExercise


class Document{}

class Attachment{
}
Attachment *--> "+" Document

class Justification {
}

package ContentBattery #lightgreen{

    class Itinerary {
    }
    Itinerary o--> "+" ContentBattery.Topic

    abstract Topic{
    }
    Topic <|-- CompositeTopic
    Topic <|-- SimpleTopic
    Topic *--> "*" Attachment


    class SimpleTopic{
    }
    SimpleTopic o--> "+" KnowlegeBattery.Concept

    class CompositeTopic{
    }
    CompositeTopic o--> "+" Topic
}

package KnowlegeBattery #lightblue{

    class ConceptGraph{
    }

    ConceptGraph *-- "+" KnowlegeBattery.Concept

    class Concept{
    }
    Concept *-down-> "+" Definition
    Concept *-down-> "*" Relation : origin
    Concept *-down-> "*" Attachment

    class Definition {
        - correct : boolean
    }
    Definition *--> "*" Justification:[!definition.correct]

    class Relation {
    }
    Relation --> Concept : target
    Relation *-down-> RelationType

    enum RelationType {
        Use
        Association
        Composition
        Inheritance
        Aggregation
    }

}



package ExerciseBattery #yellow{

    abstract Exercise {
    }
    Exercise <|-- ExerciseBattery.QuestionExercise
    Exercise <|-- DomainExercise

    class DomainExercise{

    }
    DomainExercise --> "+" Domain
    DomainExercise --> "+" SimpleTopic

    class Domain{
        versions : List<Domain>
    }
    Domain *-- "*" Domain
    ExerciseBattery.Application --> "*" Domain
    class QuestionExercise{
        statement : String
    }
    QuestionExercise <|-- MultipleChoice
    QuestionExercise <|-- Cloze
    QuestionExercise <|-- Open
    QuestionExercise --> "+" Concept
    Open *-down- "+" Answer
    Student o-- "*" Answer

    class Answer{
        - correct : boolean
        - evaluated : boolean
    }
    Answer *-- "*" Justification : [!answer.correct]

    class Cloze{
        blankCount: int
    }

    class MultipleChoice{
    }

    class Application{
        - correct : boolean
        - evaluated : boolean
    }
    Application *--> "*" Justification:[!application.correct]
}
@enduml