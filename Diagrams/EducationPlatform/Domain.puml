@startuml EducationPlatformDomain

class Itinerary {
    - custom : boolean
    + Edit()
}

interface Topic{
    + getTableOfContents()
    + getSyllabus() : Concepts
    + Edit()
    + Read()
}


class SimpleTopic{
}

class CompositeTopic{
    - topics : List<Topic> 
}

abstract Excercise {
}

class Domain {
}

class Application {
    - correct : boolean
    - Version
}

class Question {
    - statement : StatementType
}

enum StatementType {
    ClozeTest
    Definition
    Relation
    JustifyApplication
}

class Text {
    - TableOfContents
}

class Concept {
}

class Definition {
    - correct : boolean
}

class Justification {
    - correct : boolean
}

class Multimedia {

}

class Answer{
    - correct : boolean
    - evaluated : boolean
}

EducationPlatform *--> "+" Teacher
EducationPlatform *--> "+" Student
EducationPlatform *--> Topic
EducationPlatform *--> Itinerary : predefined
EducationPlatform o--> "*" Itinerary : custom
EducationPlatform o--> Chat
Chat o--> "+" Excercise



'Student <..> Chat : topic
Student ..> Chat 
Answer ..> Student

Excercise <|-- Domain
Excercise <|-- Question 

Domain *-->"*" Application: requirements
Application -->"+" Concept

'Application <|-- Correct
'Application <|-- Incorrect

Question -->"+" Concept
Question -->"*" Application

Question *--> StatementType
Question *--> "*" Answer
Answer <|-- Open
Answer <|-- MultipleChoice
Answer o--> "?" Justification : correct = false

'Teacher ..> Open : review

Teacher ..> Topic : editor
Teacher ..> Itinerary : editor
Student ...> Itinerary : editor
note left of Student
    Editor only
    for custom 
    itineraries
    end note
'Student ...> Custom : editor


Topic <|.. CompositeTopic
Topic <|.. SimpleTopic
CompositeTopic o--> "+" Topic

'Itinerary <|-- Custom
'Itinerary <|-- Predefined

Itinerary o--> "+" Topic
'Predefined o--> "+" Topic


SimpleTopic o--> "+" Concept
Topic o--> "+" Multimedia
Concept *--> "+" Definition : correct
Concept *--> "*" Definition : incorrect
Relation *-right-> RelationType
Concept *--> "*" Relation : origin

enum RelationType {
    Use
    Association
    Composition
    Inheritance
    Aggregation
} 

class Relation {
    - type : RelationType
}


Relation --> "+" Concept : target
Definition o-->"*" Justification

'Justification o-->"+" Justification


Multimedia <|-- Podcast
Multimedia <|-- Video

Podcast o--> Text : transcript
Video o--> Text : transcript

Multimedia <|-- Text

Text -->"*" Concept

@enduml