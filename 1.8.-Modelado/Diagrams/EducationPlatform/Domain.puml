@startuml EducationPlatformDomain

EducationPlatform *-[#green]-> "+" User
EducationPlatform *-[#green]-> content.Topic
EducationPlatform *-[#green]-> content.Itinerary : predefined
EducationPlatform o-[#green]-> "*" content.Itinerary : custom
EducationPlatform *-[#green]-> "*" question_battery.Question
EducationPlatform *-[#green]-> "*" Solution
EducationPlatform *-[#green]-> corpus.Corpus

abstract Solution {
    - correct : boolean
    - evaluated : boolean
    - createdDate : Date
    - evaluatedDate : Date
    - owner : User
}
Solution <|--  Application
Solution <|-- Answer
Solution --> User
Solution *--> "*" Justification:[!solution.correct]

class Answer{
    - content : String
}
Answer --> Question

abstract User{
    - name : String
}
User <|-- Teacher
User <|-- Student

class Teacher{
    
}

class Student{

}
Student o-->"*" Progress

class Progress {
    - elapsedTime: Time
    - percentageCompleted: Integer
}
Progress --> content.Itinerary

class Justification {
    - content : String
}

package content #lightgreen{

    class Itinerary {
   
    }
    Itinerary o--> "+" Topic

    abstract Topic{
    }
    Topic <|-- CompositeTopic
    Topic <|-- SimpleTopic
    Topic *--> "*" Document

    class CompositeTopic {
        - topic[] : Topic
    }

    class Document {
        - TYPE: DocumentType
        - date : Date
    }
    Document --> DocumentType

    enum DocumentType {
        TextWithImagesAndURLs
        Video
        Audio
    }

    class SimpleTopic{
    }
    SimpleTopic o--> "+" corpus.Concept

    class CompositeTopic{
    }
    CompositeTopic o--> "+" Topic
}

package corpus #lightblue{

    class Corpus {
    }
    Corpus *-- "+" Concept

    class Concept{
        - name : String
    }
    Concept *-down-> "+" Definition
    Concept *-down-> "*" Relation : origin

    class Definition {
        - correct : boolean
    }
    Definition *--> "*" Justification:[!definition.correct]

    class Relation {
    }
    Relation --> Concept : target
    Relation *-down-> RelationType

    enum RelationType {
        Use
        Association
        Composition
        Inheritance
        Aggregation
    }

}

class Domain {
   - version : Version
   - description: String
}
Domain --> "+" SimpleTopic
Domain *-- "*" Domain

class Application{
  
}
Application --> "*" Domain

package question_battery #yellow{

    class Question{
            statement : String
    }
    Question <|-- MultipleChoice
    Question <|-- Cloze
    Question <|-- Open
    Question --> "+" Concept

    class Cloze{
       - blankCount: int
       - blankWords[] : String
    }

    class MultipleChoice{
    }
    MultipleChoice *--"2..n" Option
    MultipleChoice *-- Correct
    MultipleChoice *--"1..n" Incorrect

    abstract Option
    Option <|-- Incorrect
    Option <|-- Correct

    class Correct

    class Incorrect

}

@enduml